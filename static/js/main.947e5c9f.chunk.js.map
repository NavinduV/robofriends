{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","name","id","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filterRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"0OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MACxB,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,cAAcC,IAAG,+BAA0BJ,EAA1B,sBAC1B,gCACC,6BAAKD,IACL,4BAAIE,WCcOI,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CAECT,GAAIM,EAAOG,GAAGT,GACdD,KAAMO,EAAOG,GAAGV,KAChBE,MAAOK,EAAOG,GAAGR,OAHZQ,SCKIC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACAA,UAAU,4CACVW,KAAK,SACLC,YAAY,eACZC,SAAUH,OCCEI,EARA,SAACC,GACf,OACC,qBAAKf,UAAU,YAAf,SACEe,EAAMC,YCwCKC,E,kDAvCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACX,YAAaU,EAAME,OAAOC,SAbzC,EAAKC,MAAQ,CACZnB,OAAQ,GACRK,YAAa,IAJD,E,gEAQO,IAAD,OACnBe,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAAChB,OAAQwB,S,+BAO5B,IAAD,EACsBC,KAAKN,MAA5BnB,EADC,EACDA,OAAQK,EADP,EACOA,YACTqB,EAAe1B,EAAO2B,QAAO,SAAAC,GAClC,OAAOA,EAAMnC,KAAKoC,cAAcC,SAASzB,EAAYwB,kBAEtD,OAAoB,IAAhB7B,EAAO+B,OACH,mBAAGnC,UAAU,OAAb,gCAGN,sBAAKA,UAAU,KAAf,UACC,6CACA,cAAC,EAAD,CAAWU,aAAcmB,KAAKX,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUd,OAAQ0B,a,GAhCNM,a,MCGlBC,IAASC,OACR,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.947e5c9f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, id, email}) => {\r\n\treturn(\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robot_image' src={`https://robohash.org/${id}testtset?200*200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\trobots.map((user, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName='pa3 ba shadow-5 b--green bg-lightest-blue' \r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='Search robot'\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div className='forScroll'>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\r\n\t\t.then(response=> response.json())\r\n\t\t.then(users=> this.setState({robots: users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {robots, searchfield} = this.state;\r\n\t\tconst filterRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif (robots.length===0) {\r\n\t\t\treturn <p className=\"more\"> Wait sometime... </p> \r\n\t\t} else {\t\r\n\t\t\treturn (\r\n\t\t\t\t<div className='tc'>\t\r\n\t\t\t\t\t<h1>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<CardList robots={filterRobots}/>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\t\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default App;\r\n\r\n// +we can use this also if there is not any robota to display :-\r\n\r\n// change this syntax to:- \r\n// if (robots.length===0) {\r\n// \treturn <p className=\"more\"> Wait sometime... </p> \r\n// } else {\t\r\n// \treturn (\r\n// \t\t<div className='tc'>\t\r\n// \t\t\t<h1>RoboFriends</h1>\r\n// \t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n// \t\t\t<Scroll>\r\n// \t\t\t\t<CardList robots={filterRobots}/>\r\n// \t\t\t</Scroll>\r\n// \t\t\t</div>\t\r\n// \t\t);\r\n\r\n// this:-\r\n// return !robots.length ?\r\n// \t<p className=\"more\"> Wait sometime... </p> :\r\n// (\r\n// \t<div className='tc'>\t\r\n// \t\t\t\t\t<h1>RoboFriends</h1>\r\n// \t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n// \t\t\t\t\t<Scroll>\r\n// \t\t\t\t\t\t<CardList robots={filterRobots}/>\r\n// \t\t\t\t\t</Scroll>\r\n// \t\t\t\t</div>\t\r\n// );\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons';\r\nimport App from './containers/App';\r\nimport './containers/App.css';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<App/>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}